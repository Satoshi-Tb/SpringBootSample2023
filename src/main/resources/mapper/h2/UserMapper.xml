<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repositry.UserMapper">
  <!-- マッピング定義(ユーザー) -->
  <!--
  select結果とJavaクラスのマッピングを設定する。idタグと、resultタグでマッピングを定義する。
  idタグ: 必須タグ。いわゆるユニークキーに該当する。このタグの値の数だけ、戻り値のListにデータがセットされる。
  resultMapとselectの紐づけは、それぞれのid属性と、resultMap属性で紐づけを行う。
  associationタグ:マッピング定義内に別のマッピング定義を入れる。いわゆるテーブル結合で利用する。ただし、結合先のデータが1件の場合。
   -->
  <resultMap type="com.example.domain.user.model.MUser" id="user">
    <id column="user_id" property="userId" />
    <result column="password" property="password" />
    <result column="user_name" property="userName" />
    <result column="birthday" property="birthday" />
    <result column="age" property="age" />
    <result column="gender" property="gender" />
    <result column="department_id" property="departmentId" />
    <result column="role" property="role" />
    <association property="department" resultMap="department"/>
  </resultMap>

  <!-- マッピング定義(部署) -->
  <resultMap type="com.example.domain.user.model.Department" id="department">
    <id column="department_id" property="departmentId" />
    <result column="department_name" property="departmentName" />
  </resultMap>
  
  <!-- ユーザー1件登録 -->
  <insert id="insertOne">
    insert into m_user(
        user_id
      , password
      , user_name
      , birthday
      , age
      , gender
      , department_id
      , role
    )
    values (
        #{userId}
      , #{password}
      , #{userName}
      , #{birthday}
      , #{age}
      , #{gender}
      , #{departmentId}
      , #{role}
    )
  </insert>
  
  <!-- ユーザー複数件取得 -->
  <!-- 
  whereタグ: ifタグが1つでもtrueとなれば、where句を追加する。
   -->
  <select id="findMany" resultType="MUser">
    select
      *
    from
      m_user
    <where>
      <if test="userId != null">
        user_id like '%' || #{userId} || '%'
      </if>
      <if test="userName != null">
        and user_name like '%' || #{userName} || '%'
      </if>
    </where>
  </select>
  
  <!-- ユーザー1件検索 -->
  <!-- resultMap: select結果とJavaクラスをマッピングするためのタグ -->
  <select id="findOne" resultMap="user">
    select
      *
    from
      m_user
      left join m_department
          on m_user.department_id = m_department.department_id
    where
      user_id = #{userId}
  </select>

  <!-- ユーザー1件更新 -->
  <!-- 
    @Paramアノテーションで指定した値をSQLに埋め込むことができる。
    埋め込むには#{パラメータ名}で指定する。
   -->
  <update id="updateOne">
    update
      m_user
    set
        password = #{password}
      , user_name = #{userName}
    where
      user_id = #{userId}
  </update>

  <!-- ユーザー1件削除 -->
  <delete id="deleteOne">
    delete from
      m_user
    where
      user_id = #{userId}
  </delete>
</mapper>